/*******************************************************************************/
/*################################## SKELETON #################################*/
/*******************************************************************************/
// 1. Include needed libraries.
// 2. Define the functions prototypes
// 3. Define module macros


#ifndef IO_H
#define IO_H

#include "../../util/registers.h"
#include "../../mcal/timer/timer.h"

/*******************************************************************************/
/*############################## IO PORTS MACROS ##############################*/
/*******************************************************************************/
#define PORT_A 'A'
#define PORT_B 'B'
#define PORT_C 'C'
#define PORT_D 'D'

/*******************************************************************************/
/*############################ IO DIRECTION MACROS ############################*/
/*******************************************************************************/
#define INPUT 0
#define OUTPUT 1

/*******************************************************************************/
/*############################ IO WRITE DATA MACROS ###########################*/
/*******************************************************************************/
#define LOW 0
#define HIGH 1

/*******************************************************************************/
/*############################## FUNC() PROTOTYPES ############################*/
/*******************************************************************************/
// Initialize the io direction
void ioInit(uint8_t port, uint8_t pin, uint8_t dir);  

// Write the io data
void ioWrite(uint8_t port, uint8_t pin, uint8_t data);      

// Toggle the required io pin
void ioToggle(uint8_t port, uint8_t pin, uint16_t delay);   

// Read the io data
void ioRead(uint8_t port, uint8_t pin, uint8_t *data);      


#endif